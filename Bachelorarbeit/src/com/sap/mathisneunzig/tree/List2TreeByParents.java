package com.sap.mathisneunzig.tree;

import java.util.ArrayList;
import java.util.HashMap;

//Best Case: O(n)
//Avg Case: O(n)
//Worst Case: O(n)
public class List2TreeByParents {
	
	public static HashMap<String, Node> getMap() {
		
		ArrayList<Node> nodes = new ArrayList<>();
		nodes.add(new Node("SB_CFD_PRJ_PROJECT_V4", new Content("SRVB"), ""));
		
		nodes.add(new Node("SD_CFD_PRJ_PROJECT_TP", new Content("SD"), "SB_CFD_PRJ_PROJECT_V4"));
		
		//PROJECT
		nodes.add(new Node("C_CFD_PRJ_PROJECT_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_PROJECT_TP", new Content("BO"), "C_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("E_CFD_PRJ_PROJECT_TP", new Content("EI"), "R_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("CFD_D_PRJ_PRJCT", new Content("DB", "#EXTENSIBLE_ANY"), "E_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("CFD_S_PRJ_PROJECT_EXT_INCL_PS", new Content("A", "cfd_dummy"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("I_CFD_PRJ_PROJECT", new Content("I"), "R_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_PROJECT_TP", new Content("BDEF"), "R_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_PROJECTDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_PROJECT_TP"));
		
		//MEMBER
		nodes.add(new Node("C_CFD_PRJ_MEMBER_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_MEMBER_TP", new Content("BO"), "C_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("E_CFD_PRJ_MEMBER_TP", new Content("EI"), "R_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("CFD_D_PRJ_MBR", new Content("DB"), "E_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("CFD_S_PRJ_MEMBER_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_MBR"));
		nodes.add(new Node("I_CFD_PRJ_MEMBER", new Content("I"), "R_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_MEMBER_TP", new Content("BDEF"), "R_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("R_CFD_PRJ_MEMBERDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_MEMBER_TP"));
		
		//TASK
		nodes.add(new Node("C_CFD_PRJ_TASK_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_TASK_TP", new Content("BO"), "C_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("E_CFD_PRJ_TASK_TP", new Content("EI"), "R_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("CFD_D_PRJ_TASK", new Content("DB", "#EXTENSIBLE_ANY"), "E_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("CFD_S_PRJ_TASK_EXT_INCL_PS", new Content("A", ""), "CFD_D_PRJ_TASK"));
		nodes.add(new Node("I_CFD_PRJ_TASK", new Content("I"), "R_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_TASK_TP", new Content("BDEF"), "R_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("R_CFD_PRJ_TASKDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_TASK_TP"));
		
		//ASSIGNMENT
		nodes.add(new Node("C_CFD_PRJ_ASSIGNMENT_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_ASSIGNMENT_TP", new Content("BO"), "C_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("E_CFD_PRJ_ASSIGNMENT_TP", new Content("EI"), "R_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("CFD_D_PRJ_ASSGMT", new Content("DB"), "E_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("CFD_S_PRJ_ASSIGNMENT_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_ASSGMT"));
		nodes.add(new Node("I_CFD_PRJ_ASSIGNMENT", new Content("I"), "R_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_ASSIGNMENT_TP", new Content("BDEF"), "R_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("R_CFD_PRJ_ASSIGNMENTDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_ASSIGNMENT_TP"));
		
		//ROLE
		nodes.add(new Node("C_CFD_PRJ_ROLE_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_ROLE_TP", new Content("BO"), "C_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("E_CFD_PRJ_ROLE_TP", new Content("EI"), "R_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("CFD_D_PRJ_ROLE", new Content("DB"), "E_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("CFD_S_PRJ_ROLE_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_ROLE"));
		nodes.add(new Node("I_CFD_PRJ_ROLE", new Content("I"), "R_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_ROLE_TP", new Content("BDEF"), "R_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("R_CFD_PRJ_ROLEDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_ROLE_TP"));
		
		
		HashMap<String, Node> map = new HashMap<>();
		for(Node n : nodes) {
			map.put(n.id, n);
		}
		
		for(Node n : nodes) {
			if(!n.parentId.equals("")) {
				Node p = map.get(n.parentId);
				if(p != null)
					map.get(n.parentId).children.add(n.id);
			}
		}
		
		return map;
		
	}
	
	public static HashMap<String, Node> getMapMiddle() {
		
		ArrayList<Node> nodes = new ArrayList<>();
		nodes.add(new Node("SB_CFD_PRJ_PROJECT_V4", new Content("SRVB"), ""));
		
		nodes.add(new Node("SD_CFD_PRJ_PROJECT_TP", new Content("SD"), "SB_CFD_PRJ_PROJECT_V4"));
		
		//PROJECT
		nodes.add(new Node("C_CFD_PRJ_PROJECT_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_PROJECT_TP", new Content("BO"), "C_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("E_CFD_PRJ_PROJECT_TP", new Content("EI"), "R_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("CFD_D_PRJ_PRJCT", new Content("DB", "#EXTENSIBLE_ANY"), "E_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("CFD_S_PRJ_PROJECT_EXT_INCL_PS", new Content("A", "cfd_dummy"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_1", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_2", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_3", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_4", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_5", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_6", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_7", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_8", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_1R", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_2R", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_3R", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_4R", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_5R", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_6R", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_7R", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_8R", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_1E", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_2E", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_3E", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_4E", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_5E", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_6E", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_7E", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_S_STRUCT_8E", new Content("A"), "CFD_D_PRJ_PRJCT"));
		nodes.add(new Node("CFS_ID_TEST", new Content("D"), "CFS_S_STRUCT_1"));
		nodes.add(new Node("CFS_ID_TEST2", new Content("D"), "CFS_S_STRUCT_1"));
		nodes.add(new Node("CFS_ID_TEST3", new Content("D"), "CFS_S_STRUCT_1"));
		nodes.add(new Node("CFS_ID_TEST4", new Content("D"), "CFS_S_STRUCT_1"));
		nodes.add(new Node("CFS_ID_TEST", new Content("D"), "CFS_S_STRUCT_4"));
		nodes.add(new Node("CFS_ID_TEST2", new Content("D"), "CFS_S_STRUCT_4"));
		nodes.add(new Node("CFS_ID_TEST3", new Content("D"), "CFS_S_STRUCT_4"));
		nodes.add(new Node("CFS_ID_TEST4", new Content("D"), "CFS_S_STRUCT_4"));
		nodes.add(new Node("CFS_ID_TEST5", new Content("D"), "CFS_S_STRUCT_4"));
		nodes.add(new Node("CFS_ID_TEST6", new Content("D"), "CFS_S_STRUCT_4"));
		nodes.add(new Node("CFS_ID_TEST7", new Content("D"), "CFS_S_STRUCT_4"));
		nodes.add(new Node("CFS_ID_TEST8", new Content("D"), "CFS_S_STRUCT_4"));
		nodes.add(new Node("CFS_ID_TEST2Q", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST3Q", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST4Q", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST5Q", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST6Q", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST7Q", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST8Q", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST2QT", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST3QT", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST4QT", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST5QT", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST6QT", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST7QT", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("CFS_ID_TEST8QT", new Content("D"), "CFS_S_STRUCT_4E"));
		nodes.add(new Node("I_CFD_PRJ_PROJECT", new Content("I"), "R_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_PROJECT_TP", new Content("BDEF"), "R_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_PROJECTDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_PROJECT_TP"));
		
		//MEMBER
		nodes.add(new Node("C_CFD_PRJ_MEMBER_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_MEMBER_TP", new Content("BO"), "C_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("E_CFD_PRJ_MEMBER_TP", new Content("EI"), "R_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("CFD_D_PRJ_MBR", new Content("DB"), "E_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("CFD_S_PRJ_MEMBER_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_MBR"));
		nodes.add(new Node("I_CFD_PRJ_MEMBER", new Content("I"), "R_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_MEMBER_TP", new Content("BDEF"), "R_CFD_PRJ_MEMBER_TP"));
		nodes.add(new Node("R_CFD_PRJ_MEMBERDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_MEMBER_TP"));
		
		//TASK
		nodes.add(new Node("C_CFD_PRJ_TASK_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_TASK_TP", new Content("BO"), "C_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("E_CFD_PRJ_TASK_TP", new Content("EI"), "R_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("CFD_D_PRJ_TASK", new Content("DB", "#EXTENSIBLE_ANY"), "E_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("CFD_S_PRJ_TASK_EXT_INCL_PS", new Content("A", ""), "CFD_D_PRJ_TASK"));
		nodes.add(new Node("I_CFD_PRJ_TASK", new Content("I"), "R_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_TASK_TP", new Content("BDEF"), "R_CFD_PRJ_TASK_TP"));
		nodes.add(new Node("R_CFD_PRJ_TASKDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_TASK_TP"));
		
		//ASSIGNMENT
		nodes.add(new Node("C_CFD_PRJ_ASSIGNMENT_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_ASSIGNMENT_TP", new Content("BO"), "C_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("E_CFD_PRJ_ASSIGNMENT_TP", new Content("EI"), "R_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("CFD_D_PRJ_ASSGMT", new Content("DB"), "E_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("CFD_S_PRJ_ASSIGNMENT_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_ASSGMT"));
		nodes.add(new Node("I_CFD_PRJ_ASSIGNMENT", new Content("I"), "R_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_ASSIGNMENT_TP", new Content("BDEF"), "R_CFD_PRJ_ASSIGNMENT_TP"));
		nodes.add(new Node("R_CFD_PRJ_ASSIGNMENTDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_ASSIGNMENT_TP"));
		
		//ROLE
		nodes.add(new Node("C_CFD_PRJ_ROLE_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_ROLE_TP", new Content("BO"), "C_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("E_CFD_PRJ_ROLE_TP", new Content("EI"), "R_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("CFD_D_PRJ_ROLE", new Content("DB"), "E_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("CFD_S_PRJ_ROLE_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_ROLE"));
		nodes.add(new Node("I_CFD_PRJ_ROLE", new Content("I"), "R_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_ROLE_TP", new Content("BDEF"), "R_CFD_PRJ_ROLE_TP"));
		nodes.add(new Node("R_CFD_PRJ_ROLEDRAFT", new Content("D"), "BDEF_R_CFD_PRJ_ROLE_TP"));
		
		//USER1
		nodes.add(new Node("C_CFD_PRJ_USER1_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_USER1_TP", new Content("BO"), "C_CFD_PRJ_USER1_TP"));
		nodes.add(new Node("E_CFD_PRJ_USER1_TP", new Content("EI"), "R_CFD_PRJ_USER1_TP"));
		nodes.add(new Node("CFD_D_PRJ_USER1", new Content("DB"), "E_CFD_PRJ_USER1_TP"));
		nodes.add(new Node("CFD_S_PRJ_USER1_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_USER1"));
		nodes.add(new Node("I_CFD_PRJ_USER1", new Content("I"), "R_CFD_PRJ_USER1_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_USER1_TP", new Content("BDEF"), "R_CFD_PRJ_USER1_TP"));
		nodes.add(new Node("R_CFD_PRJ_USER1DRAFT", new Content("D"), "BDEF_R_CFD_PRJ_USER1_TP"));
		
		//USER2
		nodes.add(new Node("C_CFD_PRJ_USER2_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_USER2_TP", new Content("BO"), "C_CFD_PRJ_USER2_TP"));
		nodes.add(new Node("E_CFD_PRJ_USER2_TP", new Content("EI"), "R_CFD_PRJ_USER2_TP"));
		nodes.add(new Node("CFD_D_PRJ_USER2", new Content("DB"), "E_CFD_PRJ_USER2_TP"));
		nodes.add(new Node("CFD_S_PRJ_USER2_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_USER2"));
		nodes.add(new Node("CFS_S_STRUCT_1B", new Content("A"), "CFD_D_PRJ_USER2"));
		nodes.add(new Node("CFS_S_STRUCT_2B", new Content("A"), "CFD_D_PRJ_USER2"));
		nodes.add(new Node("CFS_S_STRUCT_3B", new Content("A"), "CFD_D_PRJ_USER2"));
		nodes.add(new Node("CFS_S_STRUCT_4B", new Content("A"), "CFD_D_PRJ_USER2"));
		nodes.add(new Node("CFS_S_STRUCT_5B", new Content("A"), "CFD_D_PRJ_USER2"));
		nodes.add(new Node("CFS_S_STRUCT_6B", new Content("A"), "CFD_D_PRJ_USER2"));
		nodes.add(new Node("CFS_S_STRUCT_7B", new Content("A"), "CFD_D_PRJ_USER2"));
		nodes.add(new Node("CFS_S_STRUCT_8B", new Content("A", ""), "CFD_D_PRJ_USER2"));
		nodes.add(new Node("CFS_ID_TESTB", new Content("D"), "CFS_S_STRUCT_1B"));
		nodes.add(new Node("CFS_ID_TEST2B", new Content("D"), "CFS_S_STRUCT_1B"));
		nodes.add(new Node("CFS_ID_TEST3B", new Content("D"), "CFS_S_STRUCT_1B"));
		nodes.add(new Node("CFS_ID_TEST4B", new Content("D"), "CFS_S_STRUCT_1B"));
		nodes.add(new Node("CFS_ID_TESTB", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST2B", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST3B", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST4B", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST5B", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST6B", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST7B", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST8B", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TESTB3", new Content("D"), "CFS_S_STRUCT_1B"));
		nodes.add(new Node("CFS_ID_TEST2B3", new Content("D"), "CFS_S_STRUCT_1B"));
		nodes.add(new Node("CFS_ID_TEST3B3", new Content("D"), "CFS_S_STRUCT_1B"));
		nodes.add(new Node("CFS_ID_TEST4B3", new Content("D"), "CFS_S_STRUCT_1B"));
		nodes.add(new Node("CFS_ID_TESTB4", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST2B4", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST3B4", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST4B4", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST5B4", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST6B4", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST7B4", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("CFS_ID_TEST8B4", new Content("D"), "CFS_S_STRUCT_4B"));
		nodes.add(new Node("I_CFD_PRJ_USER2", new Content("I"), "R_CFD_PRJ_USER2_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_USER2_TP", new Content("BDEF"), "R_CFD_PRJ_USER2_TP"));
		nodes.add(new Node("R_CFD_PRJ_USER2DRAFT", new Content("D"), "BDEF_R_CFD_PRJ_USER2_TP"));
		
		//USER3
		nodes.add(new Node("C_CFD_PRJ_USER3_TP", new Content("TI"), "SD_CFD_PRJ_USER3_TP"));
		nodes.add(new Node("R_CFD_PRJ_USER3_TP", new Content("BO"), "C_CFD_PRJ_USER3_TP"));
		nodes.add(new Node("E_CFD_PRJ_USER3_TP", new Content("EI"), "R_CFD_PRJ_USER3_TP"));
		nodes.add(new Node("CFD_D_PRJ_USER3", new Content("DB"), "E_CFD_PRJ_USER3_TP"));
		nodes.add(new Node("CFD_S_PRJ_USER3_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_USER3"));
		nodes.add(new Node("I_CFD_PRJ_USER3", new Content("I"), "R_CFD_PRJ_USER3_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_USER3_TP", new Content("BDEF"), "R_CFD_PRJ_USER3_TP"));
		nodes.add(new Node("R_CFD_PRJ_USER3DRAFT", new Content("D"), "BDEF_R_CFD_PRJ_USER3_TP"));
		
		//USER4
		nodes.add(new Node("C_CFD_PRJ_USER4_TP", new Content("TI"), "SD_CFD_PRJ_PROJECT_TP"));
		nodes.add(new Node("R_CFD_PRJ_USER4_TP", new Content("BO"), "C_CFD_PRJ_USER4_TP"));
		nodes.add(new Node("E_CFD_PRJ_USER4_TP", new Content("EI"), "R_CFD_PRJ_USER4_TP"));
		nodes.add(new Node("CFD_D_PRJ_USER4", new Content("DB"), "E_CFD_PRJ_USER4_TP"));
		nodes.add(new Node("CFD_S_PRJ_USER4_EXT_INCL_PS", new Content("A"), "CFD_D_PRJ_USER4"));
		nodes.add(new Node("I_CFD_PRJ_USER4", new Content("I"), "R_CFD_PRJ_USER4_TP"));
		nodes.add(new Node("BDEF_R_CFD_PRJ_USER4_TP", new Content("BDEF"), "R_CFD_PRJ_USER4_TP"));
		nodes.add(new Node("R_CFD_PRJ_USER4DRAFT", new Content("D"), "BDEF_R_CFD_PRJ_USER4_TP"));
		
		
		HashMap<String, Node> map = new HashMap<>();
		for(Node n : nodes) {
			map.put(n.id, n);
		}
		
		for(Node n : nodes) {
			if(!n.parentId.equals("")) {
				Node p = map.get(n.parentId);
				if(p != null)
					map.get(n.parentId).children.add(n.id);
			}
		}
		
		return map;
		
	}
	
	public static HashMap<String, Node> getMapBig() {
		
		ArrayList<Node> nodes = new ArrayList<>();
		nodes.add(new Node("S_SALES_ORDER_CREATED", new Content("EB"), ""));

		nodes.add(new Node("C_SALESORDERTP", new Content("BO"), "S_SALES_ORDER_CREATED"));
		nodes.add(new Node("C2_SALESORDERTP", new Content("BO"), "C_SALESORDERTP"));
		nodes.add(new Node("R_SALESORDERTP", new Content("BO"), "C2_SALESORDERTP"));

		// R_SALESORDERTP
		nodes.add(new Node("I_SALESORDER", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("I_OUTPUTREQUEST", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("R_SALESORDERITEMTP", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("R_SALESORDERTEXTTP", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("R_SALESORDERPARTNERTP", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("R_SALESORDERPRICINGELEMENTTP", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("R_SALESORDERBILLINGPLANTP", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("R_SALESORDERSHIPTPPARTYTP", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("R_SALESORDEROUTPUTREQUESTTP", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("I_SALESORDERPARTNER", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("I_SLSORGANIZSATIONDISTRCHNL", new Content(""), "R_SALESORDERTP"));
		nodes.add(new Node("E_SALESDOCUMENTBASIC", new Content(""), "R_SALESORDERTP"));
		
		// E_SALESDOCUMENTBASIC
		nodes.add(new Node("VBAK", new Content(""), "E_SALESDOCUMENTBASIC"));
		
		// VBAK
		nodes.add(new Node("ONR00", new Content(""), "VBAK"));
		nodes.add(new Node("FPLA", new Content(""), "VBAK"));
		nodes.add(new Node("KNA1", new Content(""), "VBAK"));
		nodes.add(new Node("KONA", new Content(""), "VBAK"));
		nodes.add(new Node("ONR00", new Content(""), "VBAK"));
		nodes.add(new Node("PRPS", new Content(""), "VBAK"));
		nodes.add(new Node("QMEL", new Content(""), "VBAK"));
		nodes.add(new Node("SDARMARPP", new Content(""), "VBAK"));
		nodes.add(new Node("SDAPMREJE", new Content(""), "VBAK"));
		nodes.add(new Node("T000", new Content(""), "VBAK"));
		nodes.add(new Node("T001", new Content(""), "VBAK"));
		nodes.add(new Node("T005", new Content(""), "VBAK"));
		nodes.add(new Node("T014", new Content(""), "VBAK"));
		nodes.add(new Node("T024B", new Content(""), "VBAK"));
		nodes.add(new Node("T176", new Content(""), "VBAK"));
		nodes.add(new Node("T683", new Content(""), "VBAK"));
		nodes.add(new Node("T691A", new Content(""), "VBAK"));
		nodes.add(new Node("TCURC", new Content(""), "VBAK"));
		nodes.add(new Node("TCURV", new Content(""), "VBAK"));
		nodes.add(new Node("TDGC5", new Content(""), "VBAK"));
		nodes.add(new Node("TGSB", new Content(""), "VBAK"));
		nodes.add(new Node("TKA01", new Content(""), "VBAK"));
		nodes.add(new Node("TVAK", new Content(""), "VBAK"));
		nodes.add(new Node("TVAU", new Content(""), "VBAK"));
		nodes.add(new Node("TVBVK", new Content(""), "VBAK"));
		nodes.add(new Node("TVFK", new Content(""), "VBAK"));
		nodes.add(new Node("TVFS", new Content(""), "VBAK"));
		nodes.add(new Node("TVGRPS", new Content(""), "VBAK"));
		nodes.add(new Node("TVKBZ", new Content(""), "VBAK"));
		nodes.add(new Node("TVKO", new Content(""), "VBAK"));
		nodes.add(new Node("TVLS", new Content(""), "VBAK"));
		nodes.add(new Node("TVLV", new Content(""), "VBAK"));
		nodes.add(new Node("TVSB", new Content(""), "VBAK"));
		nodes.add(new Node("TVTA", new Content(""), "VBAK"));
		nodes.add(new Node("TVV1", new Content(""), "VBAK"));
		nodes.add(new Node("TVV2", new Content(""), "VBAK"));
		nodes.add(new Node("TVV3", new Content(""), "VBAK"));
		nodes.add(new Node("TVV4", new Content(""), "VBAK"));
		nodes.add(new Node("TVV5", new Content(""), "VBAK"));
		
		// VBAK Data Elements
		nodes.add(new Node("DD0", new Content(""), "VBAK"));
		nodes.add(new Node("DD1", new Content(""), "VBAK"));
		nodes.add(new Node("DD2", new Content(""), "VBAK"));
		nodes.add(new Node("DD3", new Content(""), "VBAK"));
		nodes.add(new Node("DD4", new Content(""), "VBAK"));
		nodes.add(new Node("DD5", new Content(""), "VBAK"));
		nodes.add(new Node("DD6", new Content(""), "VBAK"));
		nodes.add(new Node("DD7", new Content(""), "VBAK"));
		nodes.add(new Node("DD8", new Content(""), "VBAK"));
		nodes.add(new Node("DD9", new Content(""), "VBAK"));
		nodes.add(new Node("DD10", new Content(""), "VBAK"));
		nodes.add(new Node("DD11", new Content(""), "VBAK"));
		nodes.add(new Node("DD12", new Content(""), "VBAK"));
		nodes.add(new Node("DD13", new Content(""), "VBAK"));
		nodes.add(new Node("DD14", new Content(""), "VBAK"));
		nodes.add(new Node("DD15", new Content(""), "VBAK"));
		nodes.add(new Node("DD16", new Content(""), "VBAK"));
		nodes.add(new Node("DD17", new Content(""), "VBAK"));
		nodes.add(new Node("DD18", new Content(""), "VBAK"));
		nodes.add(new Node("DD19", new Content(""), "VBAK"));
		nodes.add(new Node("DD20", new Content(""), "VBAK"));
		nodes.add(new Node("DD21", new Content(""), "VBAK"));
		nodes.add(new Node("DD22", new Content(""), "VBAK"));
		nodes.add(new Node("DD23", new Content(""), "VBAK"));
		nodes.add(new Node("DD24", new Content(""), "VBAK"));
		nodes.add(new Node("DD25", new Content(""), "VBAK"));
		nodes.add(new Node("DD26", new Content(""), "VBAK"));
		nodes.add(new Node("DD27", new Content(""), "VBAK"));
		nodes.add(new Node("DD28", new Content(""), "VBAK"));
		nodes.add(new Node("DD29", new Content(""), "VBAK"));
		nodes.add(new Node("DD30", new Content(""), "VBAK"));
		nodes.add(new Node("DD31", new Content(""), "VBAK"));
		nodes.add(new Node("DD32", new Content(""), "VBAK"));
		nodes.add(new Node("DD33", new Content(""), "VBAK"));
		nodes.add(new Node("DD34", new Content(""), "VBAK"));
		nodes.add(new Node("DD35", new Content(""), "VBAK"));
		nodes.add(new Node("DD36", new Content(""), "VBAK"));
		nodes.add(new Node("DD37", new Content(""), "VBAK"));
		nodes.add(new Node("DD38", new Content(""), "VBAK"));
		nodes.add(new Node("DD39", new Content(""), "VBAK"));
		nodes.add(new Node("DD40", new Content(""), "VBAK"));
		nodes.add(new Node("DD41", new Content(""), "VBAK"));
		nodes.add(new Node("DD42", new Content(""), "VBAK"));
		nodes.add(new Node("DD43", new Content(""), "VBAK"));
		nodes.add(new Node("DD44", new Content(""), "VBAK"));
		nodes.add(new Node("DD45", new Content(""), "VBAK"));
		nodes.add(new Node("DD46", new Content(""), "VBAK"));
		nodes.add(new Node("DD47", new Content(""), "VBAK"));
		nodes.add(new Node("DD48", new Content(""), "VBAK"));
		nodes.add(new Node("DD49", new Content(""), "VBAK"));
		nodes.add(new Node("DD50", new Content(""), "VBAK"));
		nodes.add(new Node("DD51", new Content(""), "VBAK"));
		nodes.add(new Node("DD52", new Content(""), "VBAK"));
		nodes.add(new Node("DD53", new Content(""), "VBAK"));
		nodes.add(new Node("DD54", new Content(""), "VBAK"));
		nodes.add(new Node("DD55", new Content(""), "VBAK"));
		nodes.add(new Node("DD56", new Content(""), "VBAK"));
		nodes.add(new Node("DD57", new Content(""), "VBAK"));
		nodes.add(new Node("DD58", new Content(""), "VBAK"));
		nodes.add(new Node("DD59", new Content(""), "VBAK"));
		nodes.add(new Node("DD60", new Content(""), "VBAK"));
		nodes.add(new Node("DD61", new Content(""), "VBAK"));
		nodes.add(new Node("DD62", new Content(""), "VBAK"));
		nodes.add(new Node("DD63", new Content(""), "VBAK"));
		nodes.add(new Node("DD64", new Content(""), "VBAK"));
		nodes.add(new Node("DD65", new Content(""), "VBAK"));
		nodes.add(new Node("DD66", new Content(""), "VBAK"));
		nodes.add(new Node("DD67", new Content(""), "VBAK"));
		nodes.add(new Node("DD68", new Content(""), "VBAK"));
		nodes.add(new Node("DD69", new Content(""), "VBAK"));
		nodes.add(new Node("DD70", new Content(""), "VBAK"));
		nodes.add(new Node("DD71", new Content(""), "VBAK"));
		nodes.add(new Node("DD72", new Content(""), "VBAK"));
		nodes.add(new Node("DD73", new Content(""), "VBAK"));
		nodes.add(new Node("DD74", new Content(""), "VBAK"));
		nodes.add(new Node("DD75", new Content(""), "VBAK"));
		nodes.add(new Node("DD76", new Content(""), "VBAK"));
		nodes.add(new Node("DD77", new Content(""), "VBAK"));
		nodes.add(new Node("DD78", new Content(""), "VBAK"));
		nodes.add(new Node("DD79", new Content(""), "VBAK"));
		nodes.add(new Node("DD80", new Content(""), "VBAK"));
		nodes.add(new Node("DD81", new Content(""), "VBAK"));
		nodes.add(new Node("DD82", new Content(""), "VBAK"));
		nodes.add(new Node("DD83", new Content(""), "VBAK"));
		nodes.add(new Node("DD84", new Content(""), "VBAK"));
		nodes.add(new Node("DD85", new Content(""), "VBAK"));
		nodes.add(new Node("DD86", new Content(""), "VBAK"));
		nodes.add(new Node("DD87", new Content(""), "VBAK"));
		nodes.add(new Node("DD88", new Content(""), "VBAK"));
		nodes.add(new Node("DD89", new Content(""), "VBAK"));
		nodes.add(new Node("DD90", new Content(""), "VBAK"));
		nodes.add(new Node("DD91", new Content(""), "VBAK"));
		nodes.add(new Node("DD92", new Content(""), "VBAK"));
		nodes.add(new Node("DD93", new Content(""), "VBAK"));
		nodes.add(new Node("DD94", new Content(""), "VBAK"));
		nodes.add(new Node("DD95", new Content(""), "VBAK"));
		nodes.add(new Node("DD96", new Content(""), "VBAK"));
		nodes.add(new Node("DD97", new Content(""), "VBAK"));
		nodes.add(new Node("DD98", new Content(""), "VBAK"));
		nodes.add(new Node("DD99", new Content(""), "VBAK"));
		nodes.add(new Node("DD100", new Content(""), "VBAK"));
		nodes.add(new Node("DD101", new Content(""), "VBAK"));
		nodes.add(new Node("DD102", new Content(""), "VBAK"));
		nodes.add(new Node("DD103", new Content(""), "VBAK"));
		nodes.add(new Node("DD104", new Content(""), "VBAK"));
		nodes.add(new Node("DD105", new Content(""), "VBAK"));
		nodes.add(new Node("DD106", new Content(""), "VBAK"));
		nodes.add(new Node("DD107", new Content(""), "VBAK"));
		nodes.add(new Node("DD108", new Content(""), "VBAK"));
		nodes.add(new Node("DD109", new Content(""), "VBAK"));
		nodes.add(new Node("DD110", new Content(""), "VBAK"));
		nodes.add(new Node("DD111", new Content(""), "VBAK"));
		nodes.add(new Node("DD112", new Content(""), "VBAK"));
		nodes.add(new Node("DD113", new Content(""), "VBAK"));
		nodes.add(new Node("DD114", new Content(""), "VBAK"));
		nodes.add(new Node("DD115", new Content(""), "VBAK"));
		nodes.add(new Node("DD116", new Content(""), "VBAK"));
		nodes.add(new Node("DD117", new Content(""), "VBAK"));
		nodes.add(new Node("DD118", new Content(""), "VBAK"));
		nodes.add(new Node("DD119", new Content(""), "VBAK"));
		nodes.add(new Node("DD120", new Content(""), "VBAK"));
		nodes.add(new Node("DD121", new Content(""), "VBAK"));
		nodes.add(new Node("DD122", new Content(""), "VBAK"));
		nodes.add(new Node("DD123", new Content(""), "VBAK"));
		nodes.add(new Node("DD124", new Content(""), "VBAK"));
		nodes.add(new Node("DD125", new Content(""), "VBAK"));
		nodes.add(new Node("DD126", new Content(""), "VBAK"));
		nodes.add(new Node("DD127", new Content(""), "VBAK"));
		
		// VBAK Sonstiges
		nodes.add(new Node("F4_VBAK", new Content(""), "VBAK"));
		nodes.add(new Node("TDGC5_PROLI_01", new Content(""), "VBAK"));
		nodes.add(new Node("HANDLOVER_LOCATION", new Content(""), "VBAK"));
		nodes.add(new Node("SDSALESDOC_INCL_EEW_PS", new Content(""), "VBAK"));
		nodes.add(new Node("TDS_SD_CUSTH_BRANCH", new Content(""), "VBAK"));
		nodes.add(new Node("VBAK_EXT_GLO", new Content(""), "VBAK"));
		nodes.add(new Node("VBAK_STATUS", new Content(""), "VBAK"));
		nodes.add(new Node("VBAK_TECH_FIELDS", new Content(""), "VBAK"));
		
		// ONR00
		nodes.add(new Node("DD0ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD1ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD2ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD3ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD4ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD5ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD6ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD7ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD8ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD9ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD10ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD11ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD12ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD13ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD14ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD15ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD16ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD17ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD18ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD19ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD20ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD21ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD22ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD23ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD24ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD25ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD26ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD27ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD28ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD29ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD30ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD31ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD32ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD33ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD34ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD35ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD36ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD37ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD38ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD39ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD40ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD41ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD42ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD43ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD44ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD45ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD46ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD47ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD48ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD49ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD50ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD51ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD52ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD53ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD54ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD55ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD56ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD57ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD58ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD59ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD60ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD61ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD62ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD63ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD64ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD65ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD66ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD67ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD68ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD69ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD70ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD71ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD72ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD73ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD74ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD75ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD76ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD77ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD78ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD79ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD80ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD81ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD82ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD83ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD84ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD85ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD86ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD87ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD88ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD89ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD90ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD91ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD92ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD93ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD94ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD95ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD96ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD97ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD98ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD99ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD100ONR00", new Content(""), "ONR00"));
		
		// FPLA
		nodes.add(new Node("DD0FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD1FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD2FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD3FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD4FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD5FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD6FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD7FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD8FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD9FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD10FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD11FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD12FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD13FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD14FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD15FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD16FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD17FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD18FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD19FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD20FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD21FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD22FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD23FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD24FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD25FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD26FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD27FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD28FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD29FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD30FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD31FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD32FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD33FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD34FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD35FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD36FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD37FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD38FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD39FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD40FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD41FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD42FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD43FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD44FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD45FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD46FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD47FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD48FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD49FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD50FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD51FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD52FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD53FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD54FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD55FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD56FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD57FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD58FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD59FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD60FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD61FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD62FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD63FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD64FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD65FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD66FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD67FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD68FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD69FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD70FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD71FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD72FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD73FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD74FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD75FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD76FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD77FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD78FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD79FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD80FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD81FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD82FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD83FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD84FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD85FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD86FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD87FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD88FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD89FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD90FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD91FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD92FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD93FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD94FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD95FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD96FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD97FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD98FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD99FPLA", new Content(""), "FPLA"));
		nodes.add(new Node("DD100FPLA", new Content(""), "FPLA"));
		
		// KNA1
		nodes.add(new Node("DD0KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD1KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD2KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD3KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD4KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD5KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD6KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD7KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD8KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD9KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD10KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD11KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD12KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD13KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD14KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD15KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD16KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD17KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD18KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD19KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD20KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD21KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD22KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD23KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD24KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD25KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD26KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD27KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD28KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD29KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD30KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD31KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD32KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD33KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD34KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD35KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD36KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD37KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD38KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD39KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD40KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD41KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD42KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD43KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD44KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD45KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD46KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD47KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD48KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD49KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD50KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD51KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD52KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD53KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD54KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD55KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD56KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD57KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD58KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD59KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD60KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD61KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD62KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD63KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD64KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD65KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD66KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD67KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD68KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD69KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD70KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD71KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD72KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD73KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD74KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD75KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD76KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD77KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD78KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD79KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD80KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD81KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD82KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD83KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD84KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD85KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD86KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD87KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD88KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD89KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD90KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD91KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD92KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD93KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD94KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD95KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD96KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD97KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD98KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD99KNA1", new Content(""), "KNA1"));
		nodes.add(new Node("DD100KNA1", new Content(""), "KNA1"));
		
		// KONA
		nodes.add(new Node("DD0KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD1KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD2KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD3KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD4KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD5KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD6KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD7KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD8KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD9KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD10KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD11KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD12KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD13KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD14KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD15KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD16KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD17KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD18KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD19KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD20KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD21KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD22KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD23KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD24KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD25KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD26KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD27KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD28KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD29KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD30KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD31KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD32KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD33KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD34KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD35KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD36KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD37KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD38KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD39KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD40KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD41KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD42KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD43KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD44KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD45KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD46KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD47KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD48KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD49KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD50KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD51KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD52KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD53KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD54KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD55KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD56KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD57KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD58KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD59KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD60KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD61KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD62KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD63KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD64KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD65KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD66KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD67KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD68KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD69KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD70KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD71KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD72KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD73KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD74KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD75KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD76KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD77KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD78KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD79KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD80KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD81KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD82KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD83KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD84KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD85KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD86KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD87KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD88KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD89KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD90KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD91KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD92KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD93KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD94KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD95KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD96KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD97KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD98KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD99KONA", new Content(""), "KONA"));
		nodes.add(new Node("DD100KONA", new Content(""), "KONA"));

		nodes.add(new Node("TESTDATA01", new Content(""), "DD100KONA"));
		nodes.add(new Node("TESTDATA02", new Content(""), "DD100KONA"));
		nodes.add(new Node("TESTDATA03", new Content(""), "DD100KONA"));
		nodes.add(new Node("TESTDATA04", new Content(""), "DD100KONA"));
		nodes.add(new Node("TESTDATA05", new Content(""), "DD100KONA"));
		nodes.add(new Node("TESTDATA06", new Content(""), "DD100KONA"));
		nodes.add(new Node("TESTDATA07", new Content(""), "DD100KONA"));
		nodes.add(new Node("TESTDATA08", new Content(""), "DD100KONA"));
		nodes.add(new Node("TESTDATA09", new Content(""), "DD100KONA"));

		nodes.add(new Node("TESTDATA01B", new Content(""), "TESTDATA01"));
		nodes.add(new Node("TESTDATA02B", new Content(""), "TESTDATA01"));
		nodes.add(new Node("TESTDATA03B", new Content(""), "TESTDATA01"));
		nodes.add(new Node("TESTDATA04B", new Content(""), "TESTDATA01"));
		nodes.add(new Node("TESTDATA05B", new Content(""), "TESTDATA01"));
		nodes.add(new Node("TESTDATA06B", new Content(""), "TESTDATA01"));
		nodes.add(new Node("TESTDATA07B", new Content(""), "TESTDATA01"));
		nodes.add(new Node("TESTDATA08B", new Content(""), "TESTDATA01"));

		nodes.add(new Node("TESTDATA01C", new Content(""), "TESTDATA02"));
		nodes.add(new Node("TESTDATA02C", new Content(""), "TESTDATA02"));
		nodes.add(new Node("TESTDATA03C", new Content(""), "TESTDATA02"));
		nodes.add(new Node("TESTDATA04C", new Content(""), "TESTDATA02"));
		nodes.add(new Node("TESTDATA05C", new Content(""), "TESTDATA02"));
		nodes.add(new Node("TESTDATA06C", new Content(""), "TESTDATA02"));
		nodes.add(new Node("TESTDATA07C", new Content(""), "TESTDATA02"));
		nodes.add(new Node("TESTDATA08C", new Content(""), "TESTDATA02"));

		nodes.add(new Node("TESTDATA01D", new Content(""), "TESTDATA03"));
		nodes.add(new Node("TESTDATA02D", new Content(""), "TESTDATA03"));
		nodes.add(new Node("TESTDATA03D", new Content(""), "TESTDATA03"));
		nodes.add(new Node("TESTDATA04D", new Content(""), "TESTDATA03"));
		nodes.add(new Node("TESTDATA05D", new Content(""), "TESTDATA03"));
		nodes.add(new Node("TESTDATA06D", new Content(""), "TESTDATA03"));
		nodes.add(new Node("TESTDATA07D", new Content(""), "TESTDATA03"));
		nodes.add(new Node("TESTDATA08D", new Content(""), "TESTDATA03"));
		
		// ONR00
		nodes.add(new Node("DD0ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD1ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD2ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD3ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD4ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD5ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD6ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD7ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD8ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD9ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD10ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD11ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD12ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD13ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD14ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD15ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD16ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD17ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD18ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD19ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD20ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD21ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD22ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD23ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD24ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD25ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD26ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD27ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD28ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD29ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD30ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD31ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD32ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD33ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD34ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD35ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD36ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD37ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD38ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD39ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD40ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD41ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD42ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD43ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD44ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD45ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD46ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD47ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD48ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD49ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD50ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD51ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD52ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD53ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD54ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD55ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD56ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD57ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD58ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD59ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD60ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD61ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD62ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD63ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD64ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD65ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD66ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD67ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD68ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD69ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD70ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD71ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD72ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD73ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD74ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD75ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD76ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD77ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD78ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD79ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD80ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD81ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD82ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD83ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD84ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD85ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD86ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD87ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD88ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD89ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD90ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD91ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD92ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD93ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD94ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD95ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD96ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD97ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD98ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD99ONR00", new Content(""), "ONR00"));
		nodes.add(new Node("DD100ONR00", new Content(""), "ONR00"));
		
		// PRPS
		nodes.add(new Node("DD0PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD1PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD2PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD3PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD4PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD5PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD6PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD7PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD8PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD9PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD10PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD11PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD12PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD13PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD14PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD15PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD16PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD17PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD18PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD19PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD20PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD21PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD22PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD23PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD24PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD25PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD26PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD27PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD28PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD29PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD30PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD31PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD32PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD33PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD34PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD35PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD36PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD37PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD38PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD39PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD40PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD41PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD42PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD43PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD44PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD45PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD46PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD47PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD48PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD49PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD50PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD51PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD52PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD53PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD54PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD55PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD56PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD57PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD58PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD59PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD60PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD61PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD62PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD63PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD64PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD65PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD66PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD67PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD68PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD69PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD70PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD71PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD72PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD73PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD74PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD75PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD76PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD77PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD78PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD79PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD80PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD81PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD82PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD83PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD84PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD85PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD86PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD87PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD88PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD89PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD90PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD91PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD92PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD93PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD94PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD95PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD96PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD97PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD98PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD99PRPS", new Content(""), "PRPS"));
		nodes.add(new Node("DD100PRPS", new Content(""), "PRPS"));
		
		// QMEL
		nodes.add(new Node("DD0QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD1QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD2QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD3QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD4QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD5QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD6QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD7QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD8QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD9QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD10QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD11QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD12QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD13QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD14QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD15QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD16QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD17QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD18QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD19QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD20QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD21QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD22QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD23QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD24QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD25QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD26QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD27QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD28QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD29QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD30QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD31QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD32QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD33QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD34QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD35QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD36QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD37QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD38QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD39QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD40QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD41QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD42QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD43QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD44QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD45QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD46QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD47QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD48QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD49QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD50QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD51QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD52QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD53QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD54QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD55QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD56QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD57QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD58QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD59QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD60QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD61QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD62QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD63QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD64QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD65QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD66QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD67QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD68QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD69QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD70QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD71QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD72QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD73QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD74QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD75QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD76QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD77QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD78QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD79QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD80QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD81QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD82QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD83QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD84QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD85QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD86QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD87QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD88QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD89QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD90QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD91QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD92QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD93QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD94QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD95QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD96QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD97QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD98QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD99QMEL", new Content(""), "QMEL"));
		nodes.add(new Node("DD100QMEL", new Content(""), "QMEL"));
		
		// SDAPMAPRR
		nodes.add(new Node("DD0SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD1SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD2SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD3SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD4SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD5SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD6SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD7SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD8SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD9SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD10SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD11SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD12SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD13SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD14SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD15SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD16SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD17SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD18SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD19SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD20SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD21SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD22SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD23SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD24SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD25SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD26SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD27SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD28SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD29SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD30SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD31SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD32SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD33SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD34SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD35SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD36SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD37SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD38SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD39SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD40SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD41SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD42SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD43SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD44SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD45SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD46SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD47SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD48SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD49SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD50SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD51SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD52SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD53SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD54SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD55SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD56SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD57SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD58SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD59SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD60SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD61SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD62SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD63SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD64SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD65SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD66SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD67SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD68SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD69SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD70SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD71SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD72SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD73SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD74SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD75SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD76SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD77SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD78SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD79SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD80SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD81SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD82SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD83SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD84SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD85SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD86SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD87SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD88SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD89SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD90SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD91SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD92SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD93SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD94SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD95SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD96SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD97SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD98SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD99SDARMARPP", new Content(""), "SDARMARPP"));
		nodes.add(new Node("DD100SDARMARPP", new Content(""), "SDARMARPP"));
		
		// SDAPMREJR
		nodes.add(new Node("DD0SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD1SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD2SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD3SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD4SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD5SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD6SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD7SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD8SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD9SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD10SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD11SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD12SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD13SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD14SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD15SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD16SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD17SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD18SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD19SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD20SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD21SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD22SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD23SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD24SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD25SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD26SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD27SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD28SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD29SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD30SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD31SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD32SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD33SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD34SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD35SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD36SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD37SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD38SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD39SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD40SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD41SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD42SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD43SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD44SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD45SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD46SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD47SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD48SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD49SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD50SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD51SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD52SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD53SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD54SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD55SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD56SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD57SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD58SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD59SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD60SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD61SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD62SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD63SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD64SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD65SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD66SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD67SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD68SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD69SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD70SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD71SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD72SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD73SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD74SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD75SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD76SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD77SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD78SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD79SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD80SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD81SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD82SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD83SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD84SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD85SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD86SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD87SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD88SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD89SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD90SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD91SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD92SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD93SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD94SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD95SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD96SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD97SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD98SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD99SDAPMREJR", new Content(""), "SDAPMREJR"));
		nodes.add(new Node("DD100SDAPMREJR", new Content(""), "SDAPMREJR"));
		
		// I_SALESORDER
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1_DDI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP1"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1_DDI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP1"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1_DDI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP1"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1_DEI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP1"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1_DEI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP1"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1_DEI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP1"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1_INT01", new Content(""), "I_ADDITIONALCUSTOMERGROUP1"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1_INT02", new Content(""), "I_ADDITIONALCUSTOMERGROUP1"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP1_INT03", new Content(""), "I_ADDITIONALCUSTOMERGROUP1"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2_DDI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP2"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2_DDI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP2"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2_DDI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP2"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2_DEI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP2"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2_DEI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP2"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2_DEI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP2"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2_INT01", new Content(""), "I_ADDITIONALCUSTOMERGROUP2"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2_INT02", new Content(""), "I_ADDITIONALCUSTOMERGROUP2"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP2_INT03", new Content(""), "I_ADDITIONALCUSTOMERGROUP2"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3_DDI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP3"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3_DDI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP3"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3_DDI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP3"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3_DEI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP3"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3_DEI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP3"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3_DEI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP3"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3_INT01", new Content(""), "I_ADDITIONALCUSTOMERGROUP3"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3_INT02", new Content(""), "I_ADDITIONALCUSTOMERGROUP3"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP3_INT03", new Content(""), "I_ADDITIONALCUSTOMERGROUP3"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4_DDI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP4"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4_DDI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP4"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4_DDI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP4"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4_DEI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP4"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4_DEI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP4"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4_DEI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP4"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4_INT01", new Content(""), "I_ADDITIONALCUSTOMERGROUP4"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4_INT02", new Content(""), "I_ADDITIONALCUSTOMERGROUP4"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP4_INT03", new Content(""), "I_ADDITIONALCUSTOMERGROUP4"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5_DDI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP5"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5_DDI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP5"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5_DDI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP5"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5_DEI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP5"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5_DEI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP5"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5_DEI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP5"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5_INT01", new Content(""), "I_ADDITIONALCUSTOMERGROUP5"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5_INT02", new Content(""), "I_ADDITIONALCUSTOMERGROUP5"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP5_INT03", new Content(""), "I_ADDITIONALCUSTOMERGROUP5"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6_DDI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP6"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6_DDI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP6"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6_DDI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP6"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6_DEI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP6"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6_DEI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP6"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6_DEI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP6"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6_INT01", new Content(""), "I_ADDITIONALCUSTOMERGROUP6"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6_INT02", new Content(""), "I_ADDITIONALCUSTOMERGROUP6"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP6_INT03", new Content(""), "I_ADDITIONALCUSTOMERGROUP6"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7_DDI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP7"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7_DDI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP7"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7_DDI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP7"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7_DEI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP7"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7_DEI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP7"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7_DEI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP7"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7_INT01", new Content(""), "I_ADDITIONALCUSTOMERGROUP7"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7_INT02", new Content(""), "I_ADDITIONALCUSTOMERGROUP7"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP7_INT03", new Content(""), "I_ADDITIONALCUSTOMERGROUP7"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8_DDI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP8"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8_DDI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP8"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8_DDI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP8"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8_DEI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP8"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8_DEI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP8"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8_DEI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP8"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8_INT01", new Content(""), "I_ADDITIONALCUSTOMERGROUP8"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8_INT02", new Content(""), "I_ADDITIONALCUSTOMERGROUP8"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP8_INT03", new Content(""), "I_ADDITIONALCUSTOMERGROUP8"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9_DDI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP9"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9_DDI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP9"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9_DDI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP9"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9_DEI01", new Content(""), "I_ADDITIONALCUSTOMERGROUP9"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9_DEI02", new Content(""), "I_ADDITIONALCUSTOMERGROUP9"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9_DEI03", new Content(""), "I_ADDITIONALCUSTOMERGROUP9"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9_INT01", new Content(""), "I_ADDITIONALCUSTOMERGROUP9"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9_INT02", new Content(""), "I_ADDITIONALCUSTOMERGROUP9"));
		nodes.add(new Node("I_ADDITIONALCUSTOMERGROUP9_INT03", new Content(""), "I_ADDITIONALCUSTOMERGROUP9"));
		nodes.add(new Node("I_BILLINGBLOCKREASON", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_BUSINESSAREA", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_BUSINESSAREASTDHV", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_BUSINESSAREATEXT", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_BUSINESSSOLUTION", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CENTRALCREDITCHECKSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CENTRALCREDITCHECKTECHERRSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_COMPANYCODE", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CC_DDI01", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_CC_DDI02", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_CC_DDI03", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_CC_DDI04", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_CC_DDI05", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_CC_DDI06", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_CC_DDI07", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_CC_DDI08", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_CC_DDI09", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_CC_DDI10", new Content(""), "I_COMPANYCODE"));
		nodes.add(new Node("I_COMPANYCODESTDHV", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CONTRACTDOWNPAYMENTSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CONTROLLINGAREA", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CONTROLLINGAREASTDHV", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CONTROLLINGOBJECT", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CONTROLLINGOBJECTSTDHV", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_COUNTRY", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CREDITCONTROLLAREA", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CREDITCONTROLLAREASTDHV", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CREDITCONTROLLAREATEXT", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CURRENCY", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CU_DDI01", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI02", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI03", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI04", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI05", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI06", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI07", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI08", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI09", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI10", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI11", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI12", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI13", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI14", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI15", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI16", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI17", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI18", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI19", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI20", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI21", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI22", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI23", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI24", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI25", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI26", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI27", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI28", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI29", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI30", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI01A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI02A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI03A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI04A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI05A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI06A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI07A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI08A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI09A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI10A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI11A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI12A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI13A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI14A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI15A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI16A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI17A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI18A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI19A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI20A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI21A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI22A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI23A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI24A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI25A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI26A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI27A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI28A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI29A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CU_DDI30A", new Content(""), "I_CURRENCY"));
		nodes.add(new Node("I_CUSTOMER_VH", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CUSTOMERACCOUNTASSGMTGROUP", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CUSTOMER", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CUSTOMERGROUP", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CUSTOMERPAYMENTTERMS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CUSTOMERPRICEGROUP", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CUSTOMERPURCHASEORDERTYPE", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_DELIVERYBLOCKREASON", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_DELIVERYDATETYPERULE", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_DISTRIBUTIONCHANNEL", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_DIVISION", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_EXCHANGERATETYPE", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_EXPERTINSURCREDITCHECKSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_FINDOCCREDITCHECKSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_HDRBILLINGINCOMPLETIONSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_HDRDELIVINCOMPLETIONSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_HDRGENINCOMPLETIONSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_INCOTERMSCLASSIFICATION", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_INCOTERMSVERSION", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_MAXDOCVALUECREDITCHECKSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OMNICHNLSALESPROMOTIONSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_CUSTOMER", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLBILLINGBLOCKSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLCHMLCMPLNCSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLDANGEROUSGOODSSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLDELIVCONFSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLDELIVERYBLOCKSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLDELIVERYSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLORDRELTDBILLINGSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLPRCINCOMPLETIONSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLPURCHASECONFSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLSDDOCREFERENCESTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLSDDOCUMENTRJCNSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLSDPROCESSSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLTOTALDELIVERYSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVERALLTOTALSDDOCREDSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVRLITMBILLINGCOMPLTNSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVRLITMDELIVINCOMPLETIONSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVRLITMGENINCOMPLETIONSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVRLSFTYDATASHEETSSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVRLTRADECMPLNCEMBARGOSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVRLTRDCMPLNCLEGALCTRLCHKSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_OVTRDCMPLNCSNCTNDLISTCHKSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_PAYMENTTERMCREDITCHECKSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_PAYTAUTHSNCREDITCHECKSTS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_PRICELISTTYPE", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESDISTRICT", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESDOCAPPROVALSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESDOCUMENT", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESGROUP", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESOFFICE", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESORDERAPPROVALREASON", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESORDERBILLINGPLAN", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESORDERITEM", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESORDERPARTNER", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESORDERPRECDGPROCFLOW", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESORDERPRICINGELEMENT", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESORDERSUBSQNTPROCFLOW", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESORDERTYPE", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SALESORGANIZATION", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SDDOCUMENTCATEGORY", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SDDOCUMENTREASON", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SERVICEDOCUMENTENHCD", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SHIPPINGCONDITION", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SHIPPINGTYPE", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_SLSPRICINGPROCEDURE", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_TOTALBLOCKSTATUS", new Content(""), "I_SALESORDER"));
		nodes.add(new Node("I_TOTALCREDITSTATUS", new Content("dummy"), "I_SALESORDER"));
		nodes.add(new Node("I_USER", new Content(""), "I_SALESORDER"));
		
		
		HashMap<String, Node> map = new HashMap<>();
		for(Node n : nodes) {
			map.put(n.id, n);
		}
		
		for(Node n : nodes) {
			if(!n.parentId.equals("")) {
				Node p = map.get(n.parentId);
				if(p != null)
					map.get(n.parentId).children.add(n.id);
			}
		}
		
		return map;
		
	}
	
}
